graph_neighbours = {}

# Labirin 12x12
def generate_graph():
    add_neighbours(1, [2, 11])
    add_neighbours(2, [3, 13])
    add_neighbours(3, [13])
    add_neighbours(4, [14, 5])
    add_neighbours(5, [4, 6])
    add_neighbours(6, [5, 7])
    add_neighbours(7, [6, 17, 8])
    add_neighbours(8, [9])
    add_neighbours(9, [8, 10])
    add_neighbours(10, [9, 20])
    
    add_neighbours(11, [1, 12])
    add_neighbours(12, [11, 22])
    add_neighbours(13, [3, 23])
    add_neighbours(14, [4, 24])
    add_neighbours(15, [16, 25])
    add_neighbours(16, [15, 26, 17])
    add_neighbours(17, [7, 16])
    add_neighbours(18, [19, 28])
    add_neighbours(19, [18, 29])
    add_neighbours(20, [10, 30])
    
    add_neighbours(21, [22, 31])
    add_neighbours(22, [12, 21])
    add_neighbours(23, [13,33])
    add_neighbours(24, [14])
    add_neighbours(25, [15, 35])
    add_neighbours(26, [16, 27])
    add_neighbours(27, [26])
    add_neighbours(28, [18, 38])
    add_neighbours(29, [19, 39])
    add_neighbours(30, [20])
    
    add_neighbours(31, [21])
    add_neighbours(32, [33, 42])
    add_neighbours(33, [23, 32])
    add_neighbours(34, [35, 44])
    add_neighbours(35, [25, 34])
    add_neighbours(36, [35])
    add_neighbours(37, [38, 47])
    add_neighbours(38, [28, 37])
    add_neighbours(39, [29, 40])
    add_neighbours(40, [39, 40])
    
    add_neighbours(41, [42, 51])
    add_neighbours(42, [32, 41])
    add_neighbours(43, [42])
    add_neighbours(44, [34, 45])
    add_neighbours(45, [44, 46])
    add_neighbours(46, [45, 47])
    add_neighbours(47, [37, 46, 57, 48])
    add_neighbours(48, [47, 58])
    add_neighbours(49, [50, 59])
    add_neighbours(50, [40, 49])
    
    add_neighbours(51, [41, 52])
    add_neighbours(52, [51, 53])
    add_neighbours(53, [52, 54])
    add_neighbours(54, [53, 64])
    add_neighbours(55, [56])
    add_neighbours(56, [55, 66])
    add_neighbours(57, [47, 67])
    add_neighbours(58, [48])
    add_neighbours(59, [49, 60])
    add_neighbours(60, [59, 70])
    
    add_neighbours(61, [62])
    add_neighbours(62, [61, 72])
    add_neighbours(63, [64, 73])
    add_neighbours(64, [63, 54, 65])
    add_neighbours(65, [64, 66])
    add_neighbours(66, [65, 56, 76])
    add_neighbours(67, [57, 68, 77])
    add_neighbours(68, [67, 69])
    add_neighbours(69, [68])
    add_neighbours(70, [60, 80])
    
    add_neighbours(71, [72, 81])
    add_neighbours(72, [62, 71])
    add_neighbours(73, [63, 83])
    add_neighbours(74, [75, 84])
    add_neighbours(75, [74, 85])
    add_neighbours(76, [66, 86])
    add_neighbours(77, [67, 78])
    add_neighbours(78, [77, 79])
    add_neighbours(79, [78, 89])
    add_neighbours(80, [70, 90])
    
    add_neighbours(81, [71, 82, 91])
    add_neighbours(82, [81, 83])
    add_neighbours(83, [73, 82])
    add_neighbours(84, [74, 94])
    add_neighbours(85, [75, 95])
    add_neighbours(86, [76, 87])
    add_neighbours(87, [86, 88])
    add_neighbours(88, [87, 89])
    add_neighbours(89, [79, 88])
    add_neighbours(90, [80, 100])
    
    add_neighbours(91, [81, 92])
    add_neighbours(92, [91, 93])
    add_neighbours(93, [92, 94])
    add_neighbours(94, [84, 93])
    add_neighbours(95, [85])
    add_neighbours(96, [87])
    add_neighbours(97, [96, 98])
    add_neighbours(98, [97, 99])
    add_neighbours(99, [100])
    add_neighbours(100, [90, 99])
    return graph_neighbours


def add_neighbours(node, neighbours):
    new_list = []
    for val in neighbours:
        if val is not None and not val == '':
            new_list.append(str(val))
    graph_neighbours[str(node)] = new_list

